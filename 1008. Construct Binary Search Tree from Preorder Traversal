/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void solve(TreeNode* root,int data)
    {
        if(data < root->val)
        {
            if(root->left==NULL)
            {
                TreeNode* t = new TreeNode(data);
                root->left = t;
                return;
            }
            else
            {
                solve(root->left,data);
            }
        }
        else 
        {
            if(root->right==NULL)
            {
                TreeNode* t = new TreeNode(data);
                root->right = t;
                return;
            }
            else
            {
                solve(root->right,data);
            }
        }
        return;
    }
    
    TreeNode* bstFromPreorder(vector<int>& preorder) {
        
        int n=preorder.size();
        TreeNode* root = new TreeNode(preorder[0]);
        TreeNode* res = root;
        for(int i=1;i<n;i++)
        {
            solve(root,preorder[i]);
        }
        return res;
    }
};
