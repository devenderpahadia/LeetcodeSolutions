/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    
    void levelorder(TreeNode* p,vector<int>&ptree)
    {
        if(p==NULL)
        {
            ptree.push_back(-1);
            return ;
        }
        queue<TreeNode*>q;
        q.push(p);
        while(!q.empty())
        {
            TreeNode* u = q.front();
            q.pop();
            if(u->left)
            {
                ptree.push_back(u->left->val);
                q.push(u->left);
            }
            else
            {
                ptree.push_back(-1);
            }
            if(u->right)
            {
                ptree.push_back(u->right->val);
                q.push(u->right);
            }
            else
            {
                ptree.push_back(-1);
            }
            
        }
    }
    
    bool isSameTree(TreeNode* p, TreeNode* q) 
    {
        vector<int>ptree;
        vector<int>qtree;
        if(p && q && p->val !=q->val)
            return false;
        levelorder(p,ptree);
        levelorder(q,qtree);
        
        if(ptree==qtree)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
};
