/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int kthSmallest(TreeNode* root, int k) 
    {
        queue<TreeNode*>q;
        priority_queue<int>maxh;
        q.push(root);
        maxh.push(root->val);
        while(!q.empty())
        {
            TreeNode* node = q.front();
            q.pop();
            if(node->left)
            {
                maxh.push(node->left->val);
                if(maxh.size()>k)
                {
                    maxh.pop();
                }
                q.push(node->left);
            }
            if(node->right)
            {
                maxh.push(node->right->val);
                if(maxh.size()>k)
                {
                    maxh.pop();
                }
                q.push(node->right);
            }
        }    
        return maxh.top();
    }
};
