class Solution {
public:
    
    void solve(int sr,int des,vector<int>temp,vector<int>adj[],vector<vector<int>>& res)
    {
        if(sr==des)
        {
            temp.push_back(sr);
            res.push_back(temp);
            return;
        }
        temp.push_back(sr);
        for(int i=0;i<adj[sr].size();i++)
        {
            solve(adj[sr][i],des,temp,adj,res);
        }
        return;
    }
    
    vector<vector<int>> allPathsSourceTarget(vector<vector<int>>& graph) {
        int n = graph.size();
        vector<vector<int>>res;
        vector<int>temp;
        vector<int>adj[n];
        for(int i=0;i<graph.size();i++)
        {
            for(int j=0;j<graph[i].size();j++)
            {
                adj[i].push_back(graph[i][j]);
            }
        }
        solve(0,n-1,temp,adj,res);
        return res;
    }
};
