/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void solve(TreeNode* root,unordered_map<int,int>&mp)
    {
        if(root==NULL)
        return;

        solve(root->left,mp);
        mp[root->val]++;
        solve(root->right,mp);
        return;
    }

    void solve1(TreeNode* root,unordered_map<int,int>&mp,bool &res,int B)
    {
        if(root==NULL)
        return;

        solve1(root->left,mp,res,B);
        if(B-root->val == root->val && mp[B-root->val] > 1)
        {
            res=true;
            return;
        }
        if( B-root->val != root->val && mp[B-root->val] > 0)
        {
            res=true;
            return;
        }
        solve1(root->right,mp,res,B);
        return;
    }

    bool findTarget(TreeNode* root, int k) 
    {
        unordered_map<int,int>mp;
        solve(root,mp);
        bool res=false;
        solve1(root,mp,res,k);
        return res;
    }
};
