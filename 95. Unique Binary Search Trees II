
class Solution {
public:
    
    vector<TreeNode*> solve(int start,int end)
    {
        vector<TreeNode*>res;
        if(start>end)
        {
            res.push_back(NULL);
            return res;
        }
        for(int i=start;i<=end;i++)
        {
            vector<TreeNode*> leftsub = solve(start,i-1);
            vector<TreeNode*> rightsub = solve(i+1,end);
            for(int j=0;j<leftsub.size();j++)
            {
                TreeNode* l = leftsub[j];
                for(int k=0;k<rightsub.size();k++)
                {
                    TreeNode* r = rightsub[k];
                    TreeNode* node = new TreeNode(i);
                    node->left = l;
                    node->right = r;
                    res.push_back(node);
                }
            }
        }
        return res;
    }
    
    vector<TreeNode*> generateTrees(int n) {
        vector<TreeNode*>res;
        if(n==0)
        {
            return res;
        }
        return solve(1,n);
    }
    
    
};
