/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    
    void solve(TreeNode* root,unordered_map<int,int>&mp)
    {
        if(root==NULL)
            return;
        
        mp[root->val]++;
        solve(root->left,mp);
        solve(root->right,mp);
    }
    
    vector<int> findMode(TreeNode* root) {
        unordered_map<int,int>mp;
        solve(root,mp);
        priority_queue<pair<int,int> >maxh;
        vector<int>res;
        for(auto it=mp.begin();it!=mp.end();it++)
        {
            maxh.push({it->second,it->first});
        }
        
        while(maxh.size()>0)
        {
            pair<int,int> temp = maxh.top();
            maxh.pop();
            res.push_back(temp.second);
            if(maxh.top().first != temp.first)
                return res;
        }
        return res;
    }
};
