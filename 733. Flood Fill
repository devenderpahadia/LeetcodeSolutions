class Solution {
public:
    void dfs(vector<vector<int>>& image, int i, int j, int color, int newColor)
    {
        if(image[i][j]==color)
        {
            image[i][j] = newColor;
            if(i-1>=0)
            {
                dfs(image,i-1,j,color,newColor);
            }
            if(j-1>=0)
            {
                dfs(image,i,j-1,color,newColor);
            }
            if(i+1<image.size())
            {
                dfs(image,i+1,j,color,newColor);
            }
            if(j+1<image.size())
            {
                dfs(image,i,j+1,color,newColor);
            }
        }
    }
    vector<vector<int>> floodFill(vector<vector<int>>& image, int sr, int sc, int newColor) 
    {
        int color = image[sr][sc];
        if(color!=newColor) 
            dfs(image,sr,sc,color,newColor);
        return image;
    }
    
    
};
