/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
#define mod 1000000007
class Solution {
public:
    
    long solve(TreeNode* root,vector<int>&sums)
    {
        if(!root)
            return 0;
        
        int left = solve(root->left,sums);
        int right = solve(root->right,sums);
        long sum = root->val + left+right;
        sums.push_back(sum);
        return sum;
    }
    
    int maxProduct(TreeNode* root) 
    {
        vector<int>sums;
        long total = solve(root,sums);
        long res=0;
        
        for(int i=0;i<sums.size();i++)
        {
            res = max(res,sums[i]*(total-sums[i]));
        }
        return res;
    }
};
