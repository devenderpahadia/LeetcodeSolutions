/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void solve(TreeNode* root,vector<int>&maxh)
    {
        if(root==NULL)
            return ;
        solve(root->left,maxh);
        maxh.push_back(root->val);
        solve(root->right,maxh);
    }
    
    int findSecondMinimumValue(TreeNode* root) {
        vector<int>maxh;
        solve(root,maxh);
        sort(maxh.begin(), maxh.end());
        auto it = unique(maxh.begin(), maxh.end());
        maxh.resize(distance(maxh.begin(), it));
        return maxh.size()>=2 ? maxh[1]:-1;
    }
};
