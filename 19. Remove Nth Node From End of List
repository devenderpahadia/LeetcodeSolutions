/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) 
    {
        int len = 0;
        ListNode* temp = head;
        ListNode*q = NULL;
        while(temp!= NULL)
        {
            len++;
            temp= temp->next;
        }
        if(len==1)
        {
            head=NULL;
            return head;
        }
        len = len-n+1;
        if(len==1)
        {
            head = head->next;
            return head;
        }
        temp = head;
        int i=1;
        while(i<len && temp!=NULL)
        {
            q=temp;
            temp=temp->next;
            i++;
        }
        if(temp!=NULL)
        {
            q->next = temp->next;
        }
        else
        {
            q->next = NULL;
        }
        //delete temp;
        
        return head;
        
    }
};
