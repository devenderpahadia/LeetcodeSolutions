/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    
    bool isCousins(TreeNode* root, int x, int y) 
    {
        queue<TreeNode*>q;
        q.push(root);
        while(!q.empty())
        {
            int sz = q.size();
            int fx=0,fy=0;
            while(sz--)
            {
                TreeNode* node = q.front();
                
                if(node->val == x )
                    fx=1;
                else if(node->val == y)
                    fy=1;
                
                if(fx && fy) return true;
                q.pop();
                
                if(node->left && node->right)
                {
                    if((node->left->val == x && node->right->val == y) || (node->left->val == y && node->right->val == x))
                    return false;
                    else
                    {
                        q.push(node->left);
                        q.push(node->right);
                    }
                }
                else if(node->left)
                {
                    q.push(node->left);
                }
                else if(node->right)
                {
                    q.push(node->right);
                }
            }
        }
        return false;
    }
};
