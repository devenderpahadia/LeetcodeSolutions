class Solution {
public:
    vector<int> maxSlidingWindow(vector<int>& nums, int k) 
    {
        int n=nums.size();
        vector<int>ans;
        if(n==1)
        {
            ans.push_back(nums[0]);
            return ans;
        }
        if(k>=n)
        {
            ans.push_back(*max_element(nums.begin(),nums.end()));
            return ans;
        }
        
        int i=0,j=0;
        list<int>l;
        while(j<n)
        {
            while(l.size()>0 && l.back()<nums[j])
            {
                l.pop_back();
            }
            l.push_back(nums[j]);
            if(j-i+1 < k)
            {
                j++;
            }
            else
            {
                ans.push_back(l.front());
                if(l.front()==nums[i])
                {
                    l.pop_front();
                }
                i++;
                j++;
            }
        }
        return ans;
    }
};
