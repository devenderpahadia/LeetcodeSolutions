/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrderBottom(TreeNode* root) 
    {
        vector<vector<int>>res;
        if(root==NULL)
        {
            return res;
        }
        
        queue<TreeNode*>q;
        q.push(root);
        while(!q.empty())
        {
            int sz=q.size();
            int i=0;
            vector<int>ptree;
            while(i++ < sz)
            {    
                TreeNode* u = q.front();
                q.pop();
                ptree.push_back(u->val);
                if(u->left)
                {   
                    q.push(u->left);
                }
                if(u->right)
                {
                    q.push(u->right);
                }
            }
            res.push_back(ptree);
        }
        reverse(res.begin(),res.end());
        return res;
    }
};
