class Solution {
    int n = 3;
    vector<vector<int>>board;
public:
    
    string tictactoe(vector<vector<int>>& moves) 
    {
        board.assign(n,vector<int>(n,0));
        int p = 1;
        for(vector<int>it : moves)
        {
            int row = it[0];
            int col = it[1];
            board[row][col] = p;
            
            if(checkr(row,p) || checkc(col,p) || (row==col && checkd(p)) || (row+col == n-1 && checkad(p)))
            {
                return p==1 ? "A" : "B";
            }
            p *= -1;
        }
        return moves.size() == 3*3 ? "Draw" : "Pending";
    }
               bool checkr(int row,int p)
               {
                   for(int i=0;i<n;i++)
                   {
                       if(board[row][i]!=p) return false;
                   }
                   return true;
               }
               bool checkc(int col,int p)
               {
                   for(int i=0;i<n;i++)
                   {
                       if(board[i][col]!=p) return false;
                   }
                   return true;
               }
               bool checkd(int p)
               {
                   for(int i=0;i<n;i++)
                   {
                       if(board[i][i]!=p) return false;
                   }
                   return true;
               }
               bool checkad(int p)
               {
                   for(int i=0;i<n;i++)
                   {
                       if(board[i][n-i-1]!=p) return false;
                   }
                   return true;
               }
};
